local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=0;local F;local G;local H;local I;local J;local K;local L;local M;local N;local O;local P;local Q;while true do if E==5 then Q=nil;function Q(R,S,T)local U=R[1]local V=R[2]local W=R[1068-(68+997)]return function(...)local X=U;local Y=V;local Z=W;local _=O;local a0=1;local a1=-1;local a2={}local a3={...}local a4=y("#",...)-1;local a5={}local a6={}for a7=0,a4 do if a7>=Z then a2[a7-Z]=a3[a7+1]else a6[a7]=a3[a7+1]end end;local a8=a4-Z+1;local a9;local aa;while true do local ab=0;while true do if 1==ab then if aa<=50 then if aa<=24 then if aa<=47-36 then if aa<=5 then if aa<=2 then if aa<=0 then T[a9[120-(32+85)]]=a6[a9[2]]elseif aa>1 then a6[a9[2]]=a9[3]~=0 elseif a6[a9[2]]==a9[4]then a0=a0+1 else a0=a9[3]end elseif aa<=3 then a6[a9[2]]=a6[a9[3+0]]%a9[4]elseif aa==4 then if a6[a9[2]]==a6[a9[4]]then a0=a0+1 else a0=a9[3]end else local ac=0;local ad;local ae;local af;local ag;while true do if ac==2 then for ah=ad,a1 do ag=ag+1;a6[ah]=ae[ag]end;break end;if ac==0 then ad=a9[1+1]ae,af=_(a6[ad](a6[ad+1]))ac=1 end;if 1==ac then a1=af+ad-(958-(892+65))ag=0;ac=2 end end end elseif aa<=18-10 then if aa<=6 then local ai=Y[a9[3]]local aj;local ak={}aj=w({},{[h("\119\113\52\11\15\77\86","\107\40\46\93\101")]=function(al,am)local an=0;local ao;while true do if 0==an then ao=ak[am]return ao[1][ao[2]]end end end,[h("\13\233\142\43\255\4\76\54\211\152","\34\82\182\224\78\136\109")]=function(ap,aq,ar)local as=0;local at;while true do if as==0 then at=ak[aq]at[1-0][at[3-1]]=ar;break end end end})for au=1,a9[4]do local av=0;local aw;while true do if 1==av then if aw[1]==35 then ak[au-1]={a6,aw[3]}else ak[au-(351-(87+263))]={S,aw[3]}end;a5[#a5+1]=ak;break end;if 0==av then a0=a0+1;aw=X[a0]av=1 end end end;a6[a9[2]]=Q(ai,aj,T)elseif aa==7 then a6[a9[2]]=a9[3]+a6[a9[4]]else a6[a9[2]][a6[a9[3]]]=a6[a9[4]]end elseif aa<=9 then a6[a9[182-(67+113)]]()elseif aa>10 then local ax=0;local ay;local az;while true do if ax==1 then for aA=ay+1,a1 do t(az,a6[aA])end;break end;if ax==0 then ay=a9[2]az=a6[ay]ax=1 end end else local aB=0;local aC;while true do if aB==0 then aC=a9[2]a6[aC](a6[aC+1])break end end end elseif aa<=13+4 then if aa<=34-20 then if aa<=12 then a6[a9[2]]=a9[3]~=0 elseif aa==13 then local aD=a9[2]local aE,aF=_(a6[aD](z(a6,aD+1,a1)))a1=aF+aD-1;local aG=0;for aH=aD,a1 do aG=aG+1;a6[aH]=aE[aG]end else local aI=a9[2+0]local aJ=a6[a9[3]]a6[aI+1]=aJ;a6[aI]=aJ[a9[4]]end elseif aa<=59-44 then a6[a9[2]]=S[a9[3]]elseif aa>16 then do return end else local aK=a9[2]a6[aK]=a6[aK](z(a6,aK+1,a9[3]))end elseif aa<=20 then if aa<=18 then a6[a9[2]]=Q(Y[a9[3]],nil,T)elseif aa==19 then if not a6[a9[954-(802+150)]]then a0=a0+1 else a0=a9[3]end else a6[a9[2]][a6[a9[3]]]=a9[4]end elseif aa<=22 then if aa==21 then a6[a9[2]][a9[3]]=a6[a9[4]]else for aL=a9[2],a9[3]do a6[aL]=nil end end elseif aa>23 then a6[a9[2]]=T[a9[3]]else local aM=0;local aN;local aO;while true do if aM==0 then aN=a9[3]aO=a6[aN]aM=1 end;if aM==1 then for aP=aN+1,a9[4]do aO=aO..a6[aP]end;a6[a9[5-3]]=aO;break end end end elseif aa<=37 then if aa<=30 then if aa<=27 then if aa<=25 then local aQ=0;local aR;while true do if aQ==0 then aR=a9[2]a6[aR]=a6[aR](z(a6,aR+1,a1))break end end elseif aa==26 then local aS=0;local aT;while true do if aS==0 then aT=a9[2]a6[aT]=a6[aT]()break end end else a6[a9[2]]=a9[3]end elseif aa<=28 then local aU=0;local aV;while true do if aU==0 then aV=a9[2]a6[aV](a6[aV+1])break end end elseif aa==52-23 then a6[a9[2+0]]=#a6[a9[3]]elseif a6[a9[2]]==a9[4]then a0=a0+998-(915+82)else a0=a9[8-5]end elseif aa<=33 then if aa<=31 then local aW=0;local aX;local aY;while true do if aW==1 then for aZ=aX+1,a9[4]do aY=aY..a6[aZ]end;a6[a9[2]]=aY;break end;if aW==0 then aX=a9[3]aY=a6[aX]aW=1 end end elseif aa==32 then local a_=a9[2]local b0=a6[a_+2]local b1=a6[a_]+b0;a6[a_]=b1;if b0>0 then if b1<=a6[a_+1]then local b2=0;while true do if b2==0 then a0=a9[3]a6[a_+2+1]=b1;break end end end elseif b1>=a6[a_+1]then a0=a9[3]a6[a_+3]=b1 end else local b3=0;local b4;while true do if b3==0 then b4=a9[2]a6[b4](z(a6,b4+1-0,a1))break end end end elseif aa<=1222-(1069+118)then if aa==34 then local b5=a9[2]local b6=a6[a9[3]]a6[b5+1]=b6;a6[b5]=b6[a9[4]]else a6[a9[2]]=a6[a9[3]]end elseif aa==36 then do return end else local b7=a9[2]a6[b7]=a6[b7](a6[b7+2-1])end elseif aa<=43 then if aa<=40 then if aa<=38 then a6[a9[2]][a6[a9[3]]]=a9[8-4]elseif aa>39 then a6[a9[2]]=a6[a9[3]]%a9[4]else local b8=0;local b9;while true do if b8==0 then b9=a9[2]a6[b9](z(a6,b9+1,a1))break end end end elseif aa<=41 then a6[a9[2]]=a6[a9[1+2]]%a6[a9[4]]elseif aa>42 then a6[a9[3-1]]=a6[a9[3]]elseif a6[a9[2]]then a0=a0+1 else a0=a9[3]end elseif aa<=46 then if aa<=44 then a6[a9[2]]=a6[a9[3]]+a9[4]elseif aa>45 then local ba=0;local bb;local bc;local bd;local be;while true do if ba==0 then bb=a9[2]bc,bd=_(a6[bb](z(a6,bb+1,a1)))ba=1 end;if ba==2 then for bf=bb,a1 do local bg=0;while true do if bg==0 then be=be+1;a6[bf]=bc[be]break end end end;break end;if ba==1 then a1=bd+bb-1;be=0;ba=2 end end else local bh=0;local bi;local bj;local bk;while true do if bh==0 then bi=a9[2]bj={a6[bi](a6[bi+1])}bh=1 end;if bh==1 then bk=0;for bl=bi,a9[4]do local bm=0;while true do if 0==bm then bk=bk+1;a6[bl]=bj[bk]break end end end;break end end end elseif aa<=48+0 then if aa==47 then local bn=0;local bo;while true do if bn==0 then bo=a9[2]a6[bo](z(a6,bo+1,a9[3]))break end end elseif a9[793-(368+423)]==a6[a9[4]]then a0=a0+1 else a0=a9[3]end elseif aa==49 then a6[a9[2]]=a6[a9[3]][a6[a9[4]]]else a6[a9[2]][a6[a9[3]]]=a6[a9[4]]end elseif aa<=75 then if aa<=62 then if aa<=56 then if aa<=53 then if aa<=51 then local bp=0;local bq;while true do if bp==0 then bq=a9[6-4]a6[bq]=a6[bq](z(a6,bq+1,a9[3]))break end end elseif aa==52 then a6[a9[2]]=a6[a9[3]]%a6[a9[4]]else local br=a9[2]local bs,bt=_(a6[br](z(a6,br+1,a9[21-(10+8)])))a1=bt+br-1;local bu=0-0;for bv=br,a1 do local bw=0;while true do if bw==0 then bu=bu+1;a6[bv]=bs[bu]break end end end end elseif aa<=54 then local bx=0;local by;local bz;while true do if 1==bx then for bA=1,#a5 do local bB=0;local bC;while true do if bB==0 then bC=a5[bA]for bD=442-(416+26),#bC do local bE=bC[bD]local bF=bE[1]local bG=bE[2]if bF==a6 and bG>=by then local bH=0;while true do if bH==0 then bz[bG]=bF[bG]bE[1]=bz;break end end end end;break end end end;break end;if bx==0 then by=a9[2]bz={}bx=1 end end elseif aa==55 then local bI=0;local bJ;while true do if bI==0 then bJ=a9[6-4]do return a6[bJ](z(a6,bJ+1,a9[3]))end;break end end else local bK=0;local bL;local bM;local bN;while true do if 1==bK then bN=0;for bO=bL,a9[6-2]do bN=bN+1;a6[bO]=bM[bN]end;break end;if bK==0 then bL=a9[2]bM={a6[bL](z(a6,bL+1+0,a1))}bK=1 end end end elseif aa<=497-(145+293)then if aa<=487-(44+386)then a6[a9[2]]={}elseif aa>58 then a6[a9[2]][a9[3]]=a6[a9[4]]else a6[a9[2]]=a6[a9[3]][a9[4]]end elseif aa<=60 then a6[a9[2]]=a6[a9[3]]+a9[4]elseif aa>61 then a6[a9[1488-(998+488)]]={}else local bP=a9[2]local bQ={}for bR=1,#a5 do local bS=0;local bT;while true do if 0==bS then bT=a5[bR]for bU=0+0,#bT do local bV=bT[bU]local bW=bV[1]local bX=bV[2]if bW==a6 and bX>=bP then bQ[bX]=bW[bX]bV[1]=bQ end end;break end end end end elseif aa<=68 then if aa<=65 then if aa<=63 then local bY=a9[2]local bZ=a9[4]local b_=bY+2;local c0={a6[bY](a6[bY+1+0],a6[b_])}for c1=1,bZ do a6[b_+c1]=c0[c1]end;local c2=c0[1]if c2 then a6[b_]=c2;a0=a9[3]else a0=a0+1 end elseif aa>64 then a6[a9[2]]=T[a9[3]]else a6[a9[2]][a9[3]]=a9[4]end elseif aa<=838-(201+571)then a6[a9[2]]=Q(Y[a9[3]],nil,T)elseif aa==67 then local c3=0;local c4;while true do if c3==0 then c4=a9[2]a6[c4]=a6[c4](z(a6,c4+1,a1))break end end else local c5=0;local c6;local c7;local c8;local c9;while true do if c5==0 then c6=a9[2]c7,c8=_(a6[c6](a6[c6+1]))c5=1 end;if c5==2 then for ca=c6,a1 do c9=c9+1;a6[ca]=c7[c9]end;break end;if c5==1 then a1=c8+c6-1;c9=0;c5=2 end end end elseif aa<=71 then if aa<=69 then local cb=a9[2]do return a6[cb](z(a6,cb+1,a9[3]))end elseif aa>70 then if a6[a9[2]]then a0=a0+1 else a0=a9[1141-(116+1022)]end else local cc=a9[2]local cd=a6[cc]local ce=a6[cc+2]if ce>0-0 then if cd>a6[cc+1]then a0=a9[2+1]else a6[cc+3]=cd end elseif cd<a6[cc+1]then a0=a9[3]else a6[cc+3]=cd end end elseif aa<=266-193 then if aa>72 then a6[a9[2]]=a9[3]else a6[a9[2]]=S[a9[3]]end elseif aa>74 then local cf=0;local cg;while true do if cf==0 then cg=a9[7-5]a6[cg]=a6[cg]()break end end else a0=a9[3]end elseif aa<=88 then if aa<=940-(814+45)then if aa<=78 then if aa<=76 then if a6[a9[2]]==a6[a9[4]]then a0=a0+1 else a0=a9[3]end elseif aa>77 then local ch=0;local ci;local cj;local ck;while true do if 1==ch then ck=0;for cl=ci,a9[4]do ck=ck+1;a6[cl]=cj[ck]end;break end;if ch==0 then ci=a9[4-2]cj={a6[ci](a6[ci+1])}ch=1 end end else local cm=a9[2]local cn=a9[4]local co=cm+1+1;local cp={a6[cm](a6[cm+1],a6[co])}for cq=1,cn do a6[co+cq]=cp[cq]end;local cr=cp[886-(261+624)]if cr then a6[co]=cr;a0=a9[3]else a0=a0+1 end end elseif aa<=79 then T[a9[3]]=a6[a9[3-1]]elseif aa>80 then a6[a9[2]]()else local cs=0;local ct;local cu;local cv;while true do if cs==1 then cv=a6[ct]+cu;a6[ct]=cv;cs=2 end;if cs==0 then ct=a9[2]cu=a6[ct+2]cs=1 end;if cs==2 then if cu>0 then if cv<=a6[ct+1]then local cw=0;while true do if cw==0 then a0=a9[3]a6[ct+3]=cv;break end end end elseif cv>=a6[ct+1]then a0=a9[3]a6[ct+3]=cv end;break end end end elseif aa<=84 then if aa<=1162-(1020+60)then local cx=0;local cy;local cz;local cA;while true do if cx==2 then for cB=1,a9[4]do local cC=0;local cD;while true do if cC==0 then a0=a0+1;cD=X[a0]cC=1 end;if cC==1 then if cD[1]==35 then cA[cB-1]={a6,cD[3]}else cA[cB-(1424-(630+793))]={S,cD[9-6]}end;a5[#a5+1]=cA;break end end end;a6[a9[2]]=Q(cy,cz,T)break end;if cx==1 then cA={}cz=w({},{[h("\228\221\139\240\223\231\154","\158\187\130\226")]=function(cE,cF)local cG=0;local cH;while true do if cG==0 then cH=cA[cF]return cH[1][cH[2]]end end end,[h("\1\0\247\244\41\54\247\245\59\39","\145\94\95\153")]=function(cI,cJ,cK)local cL=0;local cM;while true do if cL==0 then cM=cA[cJ]cM[1][cM[2]]=cK;break end end end})cx=2 end;if cx==0 then cy=Y[a9[3]]cz=nil;cx=1 end end elseif aa==83 then local cN=0;local cO;while true do if cN==0 then cO=a9[2]do return z(a6,cO,a1)end;break end end else a6[a9[2]]=#a6[a9[3]]end elseif aa<=86 then if aa>85 then if a9[2]==a6[a9[4]]then a0=a0+1 else a0=a9[3]end else local cP=0;local cQ;while true do if 0==cP then cQ=a9[2]a6[cQ](z(a6,cQ+1,a9[3]))break end end end elseif aa==87 then local cR=0;local cS;local cT;local cU;while true do if cR==1 then cU=0;for cV=cS,a9[4]do local cW=0;while true do if cW==0 then cU=cU+1;a6[cV]=cT[cU]break end end end;break end;if cR==0 then cS=a9[2]cT={a6[cS](z(a6,cS+1,a1))}cR=1 end end else local cX=0;local cY;local cZ;while true do if cX==1 then for c_=cY+1,a1 do t(cZ,a6[c_])end;break end;if cX==0 then cY=a9[2]cZ=a6[cY]cX=1 end end end elseif aa<=445-351 then if aa<=91 then if aa<=89 then do return a6[a9[1+1]]()end elseif aa==90 then local d0=0;local d1;while true do if 0==d0 then d1=a9[2]do return z(a6,d1,a1)end;break end end else local d2=0;local d3;while true do if 0==d2 then d3=a9[2]a6[d3]=a6[d3](a6[d3+1])break end end end elseif aa<=92 then a6[a9[2]]=a6[a9[3]][a9[4]]elseif aa==93 then a6[a9[2]]=a6[a9[3]][a6[a9[13-9]]]else a6[a9[1749-(760+987)]][a9[3]]=a9[4]end elseif aa<=97 then if aa<=95 then a0=a9[3]elseif aa==96 then if not a6[a9[2]]then a0=a0+1 else a0=a9[3]end else do return a6[a9[2]]()end end elseif aa<=99 then if aa==98 then for d4=a9[2],a9[3]do a6[d4]=nil end else local d5=a9[2]local d6=a6[d5]local d7=a6[d5+1915-(1789+124)]if d7>0 then if d6>a6[d5+1]then a0=a9[769-(745+21)]else a6[d5+3]=d6 end elseif d6<a6[d5+1+0]then a0=a9[3]else a6[d5+3]=d6 end end elseif aa>100 then a6[a9[2]]=a9[7-4]+a6[a9[4]]else local d8=0;local d9;local da;local db;local dc;while true do if d8==0 then d9=a9[2]da,db=_(a6[d9](z(a6,d9+1,a9[11-8])))d8=1 end;if d8==1 then a1=db+d9-1;dc=0;d8=2 end;if d8==2 then for dd=d9,a1 do dc=dc+1;a6[dd]=da[dc]end;break end end end;a0=a0+1;break end;if ab==0 then a9=X[a0]aa=a9[1271-(226+1044)]ab=1 end end end end end;return Q(P(),{},D)(...)end;if E==2 then function J()local de=0;local df;local dg;while true do if 1==de then return dg*256+df end;if de==0 then df,dg=n(C,F,F+2)F=F+2;de=1 end end end;K=nil;function K()local dh=0;local di;local dj;local dk;local dl;while true do if 1==dh then return dl*16777216+dk*65536+dj*256+di end;if 0==dh then di,dj,dk,dl=n(C,F,F+3)F=F+4;dh=1 end end end;L=nil;E=3 end;if E==0 then F=2-1;G=nil;C=q(p(C,5),h("\179\131","\215\157\173\116\181\46"),function(dm)if n(dm,2)==79 then G=m(p(dm,1,1))return""else local dn=0;local dp;while true do if dn==0 then dp=o(m(dm,16))if G then local dq=r(dp,G)G=nil;return dq else return dp end;break end end end end)H=nil;E=1 end;if 3==E then function L()local dr=0;local ds;local dt;local du;local dv;local dw;local dx;while true do if dr==3 then if dw==0 then if dv==0 then return dx*0 else local dy=0;while true do if dy==0 then dw=1;du=0;break end end end elseif dw==2047 then return dv==619-(555+64)and dx*1/(931-(857+74))or dx*NaN end;return u(dx,dw-1023)*(du+dv/2^(620-(367+201)))end;if dr==2 then dw=H(dt,21,31)dx=H(dt,32)==1 and-1 or 1;dr=3 end;if dr==1 then du=1;dv=H(dt,2-1,20)*2^32+ds;dr=2 end;if dr==0 then ds=K()dt=K()dr=1 end end end;M=nil;function M(dz)local dA;if not dz then dz=K()if dz==0 then return""end end;dA=p(C,F,F+dz-1)F=F+dz;local dB={}for dC=1,#dA do dB[dC]=o(n(p(dA,dC,dC)))end;return s(dB)end;N=K;E=4 end;if 1==E then function H(dD,dE,dF)if dF then local dG=0;local dH;while true do if dG==0 then dH=dD/2^(dE-(2-1))%2^(dF-1-(dE-1)+1)return dH-dH%1 end end else local dI=0;local dJ;while true do if dI==0 then dJ=2^(dE-(1-0))return dD%(dJ+dJ)>=dJ and 1 or 0 end end end end;I=nil;function I()local dK=n(C,F,F)F=F+1;return dK end;J=nil;E=2 end;if E==4 then O=nil;function O(...)return{...},y("#",...)end;P=nil;function P()local dL={}local dM={}local dN={}local dO={dL,dM,nil,dN}local dP=K()local dQ={}for dR=1,dP do local dS=0;local dT;local dU;while true do if dS==0 then dT=I()dU=nil;dS=1 end;if dS==1 then if dT==1 then dU=I()~=0 elseif dT==2 then dU=L()elseif dT==3 then dU=M()end;dQ[dR]=dU;break end end end;dO[3]=I()for dV=1,K()do local dW=I()if H(dW,1,928-(214+713))==0 then local dX=0;local dY;local dZ;local d_;while true do if dX==2 then if H(dZ,1,1)==1 then d_[2]=dQ[d_[2]]end;if H(dZ,2,2)==1638-(1523+114)then d_[3+0]=dQ[d_[3]]end;dX=3 end;if dX==3 then if H(dZ,3,3)==1 then d_[4]=dQ[d_[4]]end;dL[dV]=d_;break end;if dX==1 then d_={J(),J(),nil,nil}if dY==0+0 then d_[3]=J()d_[4]=J()elseif dY==1 then d_[3]=K()elseif dY==2 then d_[3]=K()-2^(3+13)elseif dY==3 then local e0=0;while true do if e0==0 then d_[880-(282+595)]=K()-2^16;d_[4]=J()break end end end;dX=2 end;if 0==dX then dY=H(dW,2,3)dZ=H(dW,4,6)dX=1 end end end end;for e1=1-0,K()do dM[e1-1]=P()end;return dO end;E=5 end end endv(),...)
